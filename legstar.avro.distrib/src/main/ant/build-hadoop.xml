<?xml version="1.0" encoding="UTF-8"?>
<project name="cob2avro-hadoop-sample" default="launch-local" basedir=".">

    <!-- Runs a mapreduce job on hadoop local                       -->
    <!-- Make sure you run the regular build.xml before this script -->

    <property environment="env"/>
    <property name="samplesJar" location="${basedir}/lib/legstar-avro-samples.jar"/>
    <property name="hadoopSampleClassName" value="com.legstar.avro.cob2avro.samples.CustdatHadoopReader"/>
    <property name="confdir" location="${basedir}/conf"/>
    <path id="project.class.path">
        <fileset dir="../lib">
            <include name="*.jar"/>
        </fileset>
    </path>    
    <property name="classpath" refid="project.class.path"/>
    <property name="INPUT_FILE" value="${basedir}/data/ZOS.FCUSTDAT.RDW.bin" />
    <property name="OUTPUT_DIR" value="${java.io.tmpdir}/OUTPUT" />
    
    <target name="launch-local">
  
    	<pathconvert targetos="unix" property="classpath.unix" refid="project.class.path"/>
      <pathconvert targetos="windows" property="classpath.windows" refid="project.class.path"/>
  
      <exec executable="${env.HADOOP_HOME}/bin/hadoop" osfamily="unix" failonerror="true">
        <env key="HADOOP_CLASSPATH" path="${classpath.unix}"/>
        <arg value="--config" />
        <arg value="${confdir}/hadoop-local" />
        <arg value="jar" />
        <arg value="${samplesJar}" />
        <arg value="${hadoopSampleClassName}" />
        <arg value="file://${INPUT_FILE}" />
        <arg value="file://${OUTPUT_DIR}" />
      </exec>

    	<exec executable="${env.HADOOP_HOME}/bin/hadoop.cmd" osfamily="windows" failonerror="true">
        <env key="HADOOP_CLASSPATH" path="${classpath.windows}"/>
        <arg value="--config" />
        <arg value="${confdir}/hadoop-local" />
        <arg value="jar" />
        <arg value="${samplesJar}" />
        <arg value="${hadoopSampleClassName}" />
        <arg value="file://${INPUT_FILE}" />
        <arg value="file://${OUTPUT_DIR}" />
      </exec>
  
    </target>
  
    <target name="clean" description="Clean output directory">
        <delete dir="${OUTPUT_DIR}" verbose="true" />
    </target>

    <target name="clean-and-launch" depends="clean,launch-local" />

</project>